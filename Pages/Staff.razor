@page "/staff"
@inject IJSRuntime JSRuntime
@using System.Threading;



<h3>ข้อมูลเจ้าหน้าที่  </h3>

<h3>@Count</h3>

<button @onclick=@StartCountdown>อัปเดทระบบ </button>
@*<input type="button" class="btn btn-primary" @onclick="synData" value="synData" />*@


@*<input class="form-control"       bind="currentInputValue" />
<button class="btn btn-secondary" onclick="Save">บันทึก</button>
<button class="btn btn-secondary" onclick="Read">อ่าน</button>
<button class="btn btn-secondary" onclick="Delete">ลบ</button>*@

@code {
    string currentInputValue;
     private int Count { get; set; } = 10;

    void StartCountdown()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            if (Count > 0)
            {
                Count--;

                // Note that the following line is necessary because otherwise
                // Blazor would not recognize the state change and not refresh the UI
                InvokeAsync(() =>
                {

                    StateHasChanged();
                });
            }
        }), null, 1000, 1000);
    }
    public async Task Save()
        {
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "name", currentInputValue);
        }

        public async Task Read()
        {
            currentInputValue = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "name");
        }

        public async Task Delete()
        {
            await JSRuntime.InvokeAsync<string>("localStorage.removeItem", "name");
        }
}
